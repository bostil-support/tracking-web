@model Tracking.Web.Models.ViewModel.SurveyViewModel

@{
    ViewData["Title"] = "Survey";
    Layout = "~/Views/Shared/_SurveyLayout.cshtml";
}

<div class="big-label">
    <h2>
        @Model.Title
    </h2>
</div>
<div class="main-content">
    <div class="card">
        <div class="card-header">Dati rilievo</div>
        <div class="card-item">
            <div>Severità</div>
            @if (Model.SurveySeverity != null)
            {
                <div class="bold dati-rilievo" id="SurveySeverity">@Model.SurveySeverity</div>
            }
        </div>
        <div class="card-item">
            <div>Titolo</div>
            <div class="bold dati-rilievo" id="Title">@Model.Title</div>
            <div>ID</div>
            <div class="bold" id="Id">@Model.Id</div>
        </div>
        <div class="card-item">
            <div>Utente Censimento</div>
            <div class="bold dati-rilievo" id="UserName">@Model.UserName</div>
            <!-- <div>Validatore</div> -->
            <!-- <div class="bold dati-rilievo" id="ValidatorAttribute">@Model.ValidatorAttribute</div> -->
        </div>
        <div class="card-item description">
            <div>Descrizione</div>
            <div class="bold dati-rilievo" id="Description">@Model.Description</div>
        </div>
        @if (@Model.Role == "Auditor" || @Model.Role == "Compliance")
        {
            <div class="edit-container">
                <a href="#" class="edit-all-dati-rilievo-btn" onclick="$('.dati-rilievo').trigger('custom_event');">
                    <img src="~/images/edit.png" alt="edit">
                </a>
            </div>
        }
    </div>

    <div class="card">
        <div class="card-header">Attributi</div>
        <div class="card-item">
            <div>Denom. Legal Entity</div>
            <div class="bold legal-entity" id="LegalEntityName">@Model.LegalEntityName</div>
            <div>Cod. Legal Entity</div>
            <div class="bold" id="Cod_ABI">@Model.Cod_ABI</div>
            <div>Titolo Verifica</div>
            <div class="bold" id="intervTitle">@Model.InterventionName</div>
            @if (@Model.Role.Contains("Auditor"))
            {
                <div>Tipologia di Rischio</div>
                <div class="bold normativa norm" id="mrn">@Model.EvaluatedObject</div>
            }
            else
            {
                <div>MRN</div>
                <div class="bold normativa norm" id="mrn">@Model.EvaluatedObject</div>
            }
        </div>
    </div>

    <div class="card">
        <div class="card-header">Azione di mitigazione</div>
        <div class="card-item">
            <div>Owner</div>
            <div class="bold">
                <span class="azione" id="ActionOwner">@if (Model.ActionOwner == null) { } else { @Model.ActionOwner}</span>
                @if (@Model.Role == "Auditor business" && @Model.Role == "Compliance business")
                {
                    <span hidden id="editSpan"> <a id="EditOwner" class="edit-all-dati-rilievo-btn" onclick="$('.azione').trigger('custom_event');">Edit</a></span>
                }
            </div>
        </div>
            <div class="card-item description">
                <div>Descrizione</div>
                @if (@Model.Role == "Auditor business" && @Model.Role == "Compliance business")
                {
                    <div class="bold full-line" id="ActionDescription">@Model.ActionDescription</div>
                }
                else
                {
                    <div class="bold full-line azione" id="ActionDescription">@Model.ActionDescription</div>
                }
            </div>
            @if (@Model.Role == "Auditor" || @Model.Role == "Compliance")
            {
                <div class="edit-container">
                    <a href="#" class="edit-all-dati-rilievo-btn" onclick="$('.azione').trigger('custom_event');">
                        <img src="~/images/edit.png" alt="edit">
                    </a>
                </div>
            }
        </div>
    <div class="controls">
        <div class="bold">Stato</div>
        <select asp-for="StatusId" asp-items="@Model.Statuses" class="form-control" id="StatusId" onchange="GetStatus(this.options[this.selectedIndex].value)"></select>
        <div class="bold" id="nuova">Nuova Data Scadenza</div>
        <div class="form-group">
            <div id="dueDateLocal" class='input-group date'>
                <input type="text" asp-for="@Model.DueDateLocal" class="form-control" id="dueDateLocal1">
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar" aria-hidden="true"></span>
                </span>
            </div>
        </div>

        @if (@Model.Notes.Count > 0)
        {
            <div class="bold align-top">Storico note</div>
            <div class="notes full-line">
                <div class="blue">
                    <span id="vizualizi">Visualizza tutti</span>
                    <img class="vizual" src="~/images/plus.png">
                </div>
                <hr>
            </div>
        }
        <div class="notes full-line" id="notesList"></div>
        @Html.Partial("AddNotePartial", Model.Note)

        <div class="button-container">
            <input type="button" id="annulla" value="ANNULLA" onclick="window.location='Index'">
            <input type="button" class="primary" id="salva" value="SALVA">
        </div>
    </div>
</div>

@if (@Model.Role == "Auditor" || @Model.Role == "Compliance")
{
    @Html.Partial("_ConfirmWindow")
}

@section scripts{
    <script>
        window.onload = function () {
            $('#fileName').children().remove();
            $('textarea').val('');
            $('textarea').attr("placeholder", "Note").val('');

            GetNotes();

            $('#surveyId').val('@Model.Id');
        }

        $(function () {
            $('#dueDateLocal').datetimepicker({ locale: 'it', debug: false, format: 'DD.MM.YYYY' }).
                on('dp.change', function (e) {
                    var previous = e.oldDate;
                    var end = e.date;
                    if (previous !== end) {
                        window.Survey.IsUpdated = 'True';
                        console.log(window.Survey.IsUpdated);
                    }
                });
          });

        function CreateNote() {
            var form = $("#formNote");
            var formData = new FormData();
            formData.append('Description', $('textarea').val());
            formData.append('File', $('#attachfile')[0].files[0]);
            formData.append('SurveyId', '@Model.Id');
            formData.append('Description', $('textarea').val());
            formData.append('SurveyId', '@Model.Id');

            $.ajax({
                type: "POST",
                url: "AddNote",
                processData: false,
                contentType: false,
                data: formData,
                success: GetNotes
            })
        }

        function GetNotes() {
            $.ajax({
                url:"Notes?id=" + "@Model.Id",
                type: "Get",
                success: GetAllNotesSuccess
            })
        }

        function GetAllNotesSuccess(data) {
            $('#notesList').html(data);
            $('#fileName').children().remove();
            $('textarea').val('');
            $('textarea').attr("placeholder", "Note").val('');

            var notes = document.getElementById('notesList').children;
            for (var i = 4; i < notes.length; i++)
                notes[i].style.display = 'none';
        }

    </script>
}
